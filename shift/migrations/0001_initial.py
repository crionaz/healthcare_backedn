# Generated by Django 5.2.1 on 2025-05-30 08:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('staff', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('shift_type', models.CharField(choices=[('morning', 'Morning Shift'), ('evening', 'Evening Shift'), ('night', 'Night Shift')], max_length=20)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('break_duration', models.PositiveIntegerField(default=30, help_text='Break duration in minutes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Shift',
                'verbose_name_plural': 'Shifts',
                'ordering': ['start_time', 'end_time'],
            },
        ),
        migrations.CreateModel(
            name='ShiftAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shift.shift')),
                ('staff_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shift_assignments', to='staff.staffmember')),
            ],
            options={
                'ordering': ['date', 'shift__start_time'],
                'unique_together': {('staff_member', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ShiftSwapRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_swap_requests', to='staff.staffmember')),
                ('recipient_assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='swap_requests_received', to='shift.shiftassignment')),
                ('requester_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swap_requests_made', to='shift.shiftassignment')),
            ],
            options={
                'verbose_name': 'Shift Swap Request',
                'verbose_name_plural': 'Shift Swap Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StaffAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.PositiveSmallIntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('staff_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='staff.staffmember')),
            ],
            options={
                'unique_together': {('staff_member', 'day_of_week')},
            },
        ),
    ]
